name: Terraform ci

on:
  push:
    branches: [ main ]
    paths:
      - 'infra/**'
  pull_request:
    branches: [ main ]

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: eu-west-1
    defaults:
      run:
        working-directory: 'infra'
    steps:
      - uses: actions/checkout@v2 # Checks out git repository
      - uses: hashicorp/setup-terraform@v1 # Some handy function for terraform? https://github.com/hashicorp/setup-terraform

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check


      - name: Terraform init
        id: init
        run: terraform init

      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan
        continue-on-error: false

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \n
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            </details>
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1


      - name: Terraform apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: infra
        run: terraform apply -auto-approve

  push_to_registry:
    name: Push Docker image to Docker Hub
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Build and push Docker image
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 244530008913.dkr.ecr.eu-west-1.amazonaws.com
          rev=$(git rev-parse --short HEAD)
          docker build . -t bank:$rev
          docker tag bank:$rev 244530008913.dkr.ecr.eu-west-1.amazonaws.com/wehu001:$rev
          docker tag bank:$rev 244530008913.dkr.ecr.eu-west-1.amazonaws.com/wehu001:latest
          docker push 244530008913.dkr.ecr.eu-west-1.amazonaws.com/wehu001:$rev
          docker push 244530008913.dkr.ecr.eu-west-1.amazonaws.com/wehu001:latest


